import argparse
import pandas as pd
import urllib.request
import lxml.html as lh
from bs4 import BeautifulSoup
import requests
from time import sleep
from retry import retry

'''open a tsv file (generated by main-srx.py) as dataframe'''
def open_df(file_name):

    df = pd.read_csv(file_name, sep="\t", header=None, names = ['GSM', 'Srx'])
    
    return df

def generate_list_srx(df):
    
    list_srx = df['Srx'].tolist()
    return list_srx


'''function to get each SRR ids for each sample (each SRX associated with a sample from GEO-NCBI)
This function will return a list of list with each SRX and its SRR associated'''

@retry(TimeoutError, tries=5, delay=3)
def srr_web_scrapping(list_srx_address):

    SRR_srx_ncbi = []
    for url in list_srx_address:
        # url = srx
        response = requests.get(url)
        data = response.text
        soup = BeautifulSoup(data, 'lxml')

        for a in soup.findAll('b'):
            inf = a.get_text()
            srx = inf.split(':')[0]

        for td in soup.findAll("td"):
            for link in td.find_all('a'):

                SRR_srx_ncbi.append([srx, link.get_text()])

    return SRR_srx_ncbi


'''Function to convert the SRR_srx_ncbi list to a dataframe'''
def df_srx_srr(list_srx_srr):

    header = ['SRX', 'SRR']
    df_1 = pd.DataFrame(list_srx_srr, columns=header)
    df_srx_srr = df_1.groupby('SRX')['SRR'].apply(lambda x: "%s" % ','.join(x)).reset_index()

    return df_srx_srr


'''Function to merge the first df (df with GSM and Srx columns) and the second one (df_srr) with the
SRX and SRR'''

def merge_dfs(df1, df2):

    df1['SRX'] = df1['Srx'].str.split('=', expand=True)[1] #creating a columng SRX to merge
    gsm_srx_srr_address = pd.merge(df1, df2, how='left', on=['SRX'])
    
    return gsm_srx_srr_address


'''Function to convert the final df to a csv file containing the GSM, Srx (address) and SRR information
per sample (GSM)'''

def save_df(df, output_file_name):
    
    df.to_csv(output_file_name)
    print('final df saved')


def main():
    df = open_df(args.path)
    list_srx = generate_list_srx(df)
    #print(list_srx[0])
    list_SRR_srx_ncbi = srr_web_scrapping(list_srx)
    #print(list_SRR_srx_ncbi)
    df_srr = df_srx_srr(list_SRR_srx_ncbi)
    #print(df_srr)
    df_gsm_srx_srr = merge_dfs(df, df_srr)
    #print(df_gsm_srx_srr)
    save_df(df_gsm_srx_srr, args.out)


if __name__ == "__main__":

    
    parser = argparse.ArgumentParser(
        description="A script to return a file with the GEO-NCBI samples (GSM) with their respectives SRR Ids")

    parser.add_argument(
        '-p', '--path', action="store",
                        help='Path to the dataframe containing the GSM and SRX address generated by main-srx.py (file separated by tab)',
                        required=True)

    parser.add_argument(
        '-o', '--out', action="store",
                        help='name of output file',
                        required=True)

    args = parser.parse_args()
    main()
